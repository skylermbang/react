{"version":3,"sources":["apit.ts","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASEURL","fetchCoins2","fetch","concat","then","response","json","fetchPriceData","coinId","Container","styled","div","_templateObject","_taggedTemplateLiteral","Price","_ref","isLoading","priceLoading","data","useQuery","console","log","_jsxs","children","quotes","USD","ath_price","price","market_cap","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","volume_24h","Chart","fetchChartData","chartData","map","point","x","Date","time_close","y","parseFloat","open","high","low","close","_jsx","ReactApexChart","type","series","options","chart","height","xaxis","labels","show","datetimeUTC","yaxis","formatter","value","toFixed","tooltip","enabled","Header","_templateObject2","Loading","_templateObject3","Title","h1","_templateObject4","props","theme","accentColor","CoinDetail","_templateObject5","Box1","_templateObject6","componentBgColor","Box2","_templateObject7","Box3","_templateObject8","Desc","_templateObject9","Tabs","_templateObject10","BtnContainer","_templateObject11","Tab","span","_templateObject12","isActive","textColor","BackBtn","button","_templateObject13","ThemeBtn","_templateObject14","Coin","toggleTheme","useParams","state","useLocation","history","useHistory","priceMatch","useRouteMatch","chartMatch","infoLoading","infoData","fetchCoinInfo","priceData","loading","name","onClick","handleBackClick","push","rank","symbol","open_source","description","total_supply","max_supply","Link","to","Switch","Route","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","Router","BrowserRouter","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","isDarkTheme","setIsDarkTheme","useState","ThemeProvider","prevTheme","ReactQueryDevtools","initialIsOpen","queryClinet","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.416677eb.chunk.js","sourcesContent":["const BASEURL= 'https://api.coinpaprika.com/v1'\n\nexport async function fetchCoins(){\n    const response= await fetch(`${BASEURL}/coins`)\n    const json= await response.json()\n    return json\n};\n\nexport function fetchCoins2(){\n    return fetch(`${BASEURL}/coins`).then((response) => response.json())\n};\n\nexport function fetchCoinInfo(coinId:string){\n    return fetch(`${BASEURL}/coins/${coinId}`).then((response)=>response.json())\n};\n\nexport function fetchPriceData(coinId:string){\n    return fetch(`${BASEURL}/tickers/${coinId}`).then((response)=>response.json())\n}\n\nexport function fetchChartData(coinId:string){\n    //const endDate = Math.floor(Date.now()/ 1000 )\n    //const startDate = endDate - 60*60*24*7\n    return fetch(`https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`).then((response)=>response.json())\n}","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\"\nimport { fetchPriceData } from \"../apit\";\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 0 auto;\n`\n\ninterface PriceProps {\n        coinId: string;  \n  }\n\n  interface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n      USD: {\n        ath_date: string;\n        ath_price: number;\n        market_cap: number;\n        market_cap_change_24h: number;\n        percent_change_1h: number;\n        percent_change_1y: number;\n        percent_change_6h: number;\n        percent_change_7d: number;\n        percent_change_12h: number;\n        percent_change_15m: number;\n        percent_change_24h: number;\n        percent_change_30d: number;\n        percent_change_30m: number;\n        percent_from_price_ath: number;\n        price: number;\n        volume_24h: number;\n        volume_24h_change_24h: number;\n      };\n    };\n  }\n  \n  \n\nfunction Price({ coinId }: PriceProps){\n    const {isLoading:priceLoading,data}=useQuery<PriceData>([\"priceData\",coinId], ()=> fetchPriceData(coinId))\n    console.log(data)\n    return <h1> <Container>\n        <li> All Time Highest Price :  $ {data?.quotes.USD.ath_price}</li>\n        <li> Price :  $ {data?.quotes.USD.price}</li>\n        <li> Market Cap : $ {data?.quotes.USD.market_cap}</li>\n        <li> Change 1h : {data?.quotes.USD.percent_change_1h} %</li>\n        <li> Change 6h : {data?.quotes.USD.percent_change_6h} %</li>\n        <li> Change 12h: {data?.quotes.USD.percent_change_12h} %</li>\n        <li> Change 1day : {data?.quotes.USD.percent_change_24h} %</li>\n        <li> Change 7days : {data?.quotes.USD.percent_change_7d} %</li>\n        <li> Change 30days : {data?.quotes.USD.percent_change_30d} %</li>\n        <li> Volume : {data?.quotes.USD.volume_24h}</li>\n        \n        </Container></h1>\n}\n\nexport default Price","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchChartData } from \"../apit\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\"; // Import ApexOptions for typing\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistrocial {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistrocial[]>([\"ohlcv\", coinId], () => fetchChartData(coinId));\n\n  const chartData = data?.map((point) => ({\n    x: new Date(point.time_close * 1000),\n    y: [parseFloat(point.open), parseFloat(point.high), parseFloat(point.low), parseFloat(point.close)],\n  }));\n\n  const options: ApexOptions = {\n    chart: {\n      height: 500,\n      type: \"candlestick\",\n    },\n    xaxis: {\n      type: \"datetime\",\n      labels: {\n        show: true,\n        datetimeUTC: false,\n      },\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        formatter: (value: number) => value.toFixed(2),\n      },\n    },\n    tooltip: {\n      enabled: false,\n      y: {\n        formatter: (value: number) => `$${value.toFixed(2)}`,\n      },\n    },\n  };\n\n  return (\n    <div>\n      {isLoading ? \"Loading Chart...\" : (\n        <ReactApexChart\n          type=\"candlestick\"\n          series={[{ data: chartData ?? [] }]}\n          options={options}\n          height={500}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useEffect, useState } from \"react\";\nimport { useParams,Switch, Route} from \"react-router\";\nimport { Link, useHistory, useLocation,useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchPriceData } from \"../apit\";\n\n\n\ninterface RouteParams {\n  coinId: string;\n}\n\nconst Header = styled.div`\n    height:10vh;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    \n`\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 0 auto;\n`\nconst Loading = styled.div`\n    height:10vh;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n`\nconst Title = styled.h1`\n    color:${props=>props.theme.accentColor};\n    font-size: 48px;\n`;\n\nconst CoinDetail= styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 0 auto;\n    \n`\n\n\nconst Box1 = styled.div`\n  padding: 20px 20px;\n  max-width: 1280px;\n  font-size: 1.3rem;\n  margin: 0 auto;\n  display: flex;\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: space-between;\n  }\n  li {\n    width: 100px;\n    margin-right: 20px; /* Adjust as needed for spacing */\n  }\n  background-color: ${(props) => props.theme.componentBgColor}; // Use theme property\n  border-radius: 15px;\n`;\nconst Box2= styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 30px auto;\n`\nconst Box3= styled.div`\n    padding: 20px 20px;\n    max-width:1280px;\n    font-size: 1.3rem;\n    margin: 0 auto;\n    display: flex;\n    ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center; /* Corrected alignment */\n    width:100%\n    };\n    li {\n      width:100px;\n      margin-right: 20px; /* Adjust as needed for spacing */\n    };\n\n    li:first-child {\n    //border: solid black 2px;\n    //margin-right: 150px; /* Adjust as needed for spacing */\n  }\n  li:nth-child(2) {\n    //border: solid black 2px;\n  }\n  background-color: ${(props) => props.theme.componentBgColor}; // Use theme property\n    border-radius :15px;\n\n`\n\nconst Desc = styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 0 auto;\n    font-size:1.2rem;\n`\n\ninterface RouteState {\n  name:string;\n}\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\n\n\nconst BtnContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 300px;\n  display: flex;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.componentBgColor}; // Use theme property\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\nconst BackBtn = styled.button`\n  width: 60px;\n  height: 40px;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.componentBgColor}; // Use theme property\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst ThemeBtn = styled.button`\n  width: 60px;\n  height: 40px;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.componentBgColor}; // Use theme property\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface CoinProps {\n  toggleTheme: () => void;\n}\n\nconst Coin: React.FC<CoinProps> = ({ toggleTheme }) => {\n//   const [loading, setLoading]= useState(true);\n//   const [info, setInfo]= useState<InfoData>();\n//   const [price, setPrice]= useState<PriceData>();\n   const { coinId } = useParams<RouteParams>();\n   const {state} = useLocation<RouteState>();\n   const history = useHistory();\n   /*\nThe useLocation hook from react-router-dom provides the current URL details. \nThe state property lets you pass data to a new route,\n similar to query parameters. This data can be any JavaScript object.*/\n   const priceMatch = useRouteMatch(\"/:coinId/price\")\n   const chartMatch = useRouteMatch(\"/:coindId/chart\")\n//  useEffect(()=>{\n//   (async()=>{\n//     //error handling \n//     //race-condition \n//     const info= await(\n//       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json()\n//     setInfo(info)\n//     const price= await(\n//         await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json()\n//     setPrice(price)    \n//     setLoading(false)  \n  \n\n//   })()\n\n//  },[coinId])\n\nconst {isLoading: infoLoading,data:infoData}=useQuery<InfoData>([\"info\",coinId], ()=> fetchCoinInfo(coinId))\nconst {isLoading:priceLoading,data:priceData}=useQuery<PriceData>([\"price\",coinId], ()=> fetchPriceData(coinId))\n //this is best practice put the depdence variable here  \n //we know coinId never change it gets from its parent\n const loading= infoLoading || priceLoading\n const handleBackClick = () => {\n  history.push(\"/\");\n};\n  return(\n    <Container>\n    <Header>\n        <Title> {state?.name ? state.name : loading? \"Loading...\":infoData?.name}</Title>\n        <BtnContainer>\n        <BackBtn onClick={handleBackClick}>HOME</BackBtn>\n        <ThemeBtn onClick={toggleTheme}>THEME</ThemeBtn>\n        </BtnContainer>\n    </Header>    \n    {loading? <Loading> Loading the Coin Data ... </Loading>: \n    <CoinDetail>\n        <Box1>\n          <ul>\n            <li> Rank :  {infoData?.rank}</li> \n            <li> Symbol : {infoData?.symbol}</li> \n            <li> Open Source : {infoData?.open_source?\"Yes\" :\"No\"}</li>\n          </ul>\n        </Box1>\n        <Box2> <Desc> {infoData?.description}</Desc></Box2>\n        <Box3>\n        <ul>\n            <li> Total Supply :   {priceData?.total_supply}</li> \n            \n            <li> Max Supply : {priceData?.max_supply} </li>\n          </ul>\n        </Box3>\n       </CoinDetail>}\n      \n       <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n       <Switch>\n       <Route path={`/:coinId/price`}>\n          <Price coinId={coinId}/>\n        </Route>\n        <Route path={`/${coinId}/chart`}>\n\n          <Chart coinId={coinId}/>\n        </Route>\n       </Switch>\n    </Container>\n  )\n}\nexport default Coin;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\"\nimport { fetchCoins2 } from \"../apit\";\nimport { useQuery } from \"react-query\";\n\nconst Title = styled.h1`\n    color:${props=>props.theme.accentColor};\n    font-size: 48px;\n`;\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width:480px;\n    margin: 0 auto;\n`\n\nconst Header = styled.div`\n    height:10vh;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    \n`\n\nconst CoinsList = styled.ul``\n\nconst Coin = styled.li`\n    background-color:white;\n    color:${(props) =>\n    props.theme.bgColor === \"#353b48\" ? \"#353b48\":\"#353b48\" };\n    margin-bottom: 10px;\n    border-radius: 15px;\n    a{\n        display:flex;\n        align-content: center;\n        transition: color 0.25s ease-in;\n        display:block;\n        padding:20px;\n    }\n    &:hover{\n        a{\n            color:${(props)=>props.theme.accentColor}\n        }\n    }\n`\n\nconst Loading = styled.div`\n    height:10vh;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n`\n\ninterface CoinInterface{\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string,\n}\n\nconst Img = styled.img`\n    width:25px;\n    height:25px;\n    margin-right: 10px;\n`\n\n\n\nfunction Coins(){\n    //this can be removed and just use the react -query \n    // const [coins, setCoins]= useState<CoinInterface[]>([]);\n    // const [loading, setLoading]= useState(true);\n    // useEffect(()=>{\n    //     (async()=>{\n    //      const response= await fetch(\"https://api.coinpaprika.com/v1/coins\")\n    //      const json= await response.json()\n    //      //axios will return in json but fetch will have to convert to json\n    //      setCoins(json.slice(0,99))\n    //      setLoading(false)\n    //     })();\n    // }   ,[])\n\n    const {isLoading,data}=useQuery<CoinInterface[]>(\"allCoins\",fetchCoins2)\n\n\n    return (\n        <Container>\n            <Header>\n                <Title>  Coin </Title>\n            </Header>    \n            {isLoading? <Loading> Loading the Coin Data ... </Loading>: <CoinsList>\n                {data?.slice(0,99).map((coin)=>(\n                      <Coin key={coin.id}> \n                        <Link to={{\n                            pathname:`/${coin.id}`,\n                            //sending data to :coin screen\n                            state:{name:coin.name}\n                            }}> \n                        <Img src={`https://static.coinpaprika.com/coin/${coin.id}/logo.png`} />\n                        {coin.name} &rarr;\n                        </Link>\n                    </Coin>\n                ))}\n            </CoinsList>}\n        </Container>\n    )\n}\n\nexport default Coins","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface RouterProps {\n  toggleTheme: () => void;\n}\n\n\nconst Router: React.FC<RouterProps> = ({ toggleTheme }) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/* //this is how you tell there is parameter */}\n        <Route path=\"/:coinId\">\n          <Coin toggleTheme={toggleTheme} />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#353b48\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#e1b12c\",\n  componentBgColor: \"#2f3640\", // Add this\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#353b48\",\n  accentColor: \"#e1b12c\",\n  componentBgColor: \"#ffffff\", // Add this\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ThemeBtn = styled.button`\n  width: 60px;\n  height: 40px;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: #2f3640;\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\n\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const [isDarkTheme, setIsDarkTheme] = useState(true);\n\n  const toggleTheme = () => {\n    setIsDarkTheme((prevTheme) => !prevTheme);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <GlobalStyle />\n      <Router toggleTheme={toggleTheme} />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { QueryClient,QueryClientProvider } from \"react-query\";\n\nconst queryClinet = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClinet}>\n    <ThemeProvider theme={darkTheme}>\n      <App />\n    </ThemeProvider>\n    </QueryClientProvider>\n   \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}